# configuration of the server
server {
    listen      80;
    server_name {{ sp_fqdn }}; # substitute your machine's IP address or FQDN

    access_log /var/log/nginx/{{ sp_fqdn }}.access.log;
    error_log  /var/log/nginx/{{ sp_fqdn }}.error.log error;

    return 301 https://$host$request_uri; 
    #if ($scheme != "https") {
    #    rewrite ^ https://$host$uri permanent;
    #}

    ## Deny illegal Host headers
    if ($host !~* ^({{ sp_fqdn }})$ ) {
        return 444;
    }
}

server {
    server_name {{ sp_fqdn }};
    charset     utf-8;

    listen 443 ssl;
    ssl_certificate /etc/ssl/certs/{{ domain }}/{{ sp_fqdn }}-cert.pem;
    ssl_certificate_key /etc/ssl/certs/{{ domain }}/{{ sp_fqdn }}-key.pem;
    # if you prefer letsencrypt
    # ssl_certificate /etc/letsencrypt/live/{{ sp_fqdn }}/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/{{ sp_fqdn }}/privkey.pem;

    access_log /var/log/nginx/{{ sp_fqdn }}.access.log;
    error_log  /var/log/nginx/{{ sp_fqdn }}.error.log error;

    # max upload size
    client_max_body_size 75M;   # adjust to your taste

    # test this location fetching metadatas
    # https://{{ sp_fqdn }}/Shibboleth.sso/Metadata

    root   /var/www/html/{{ sp_fqdn }}/;

#    set as you needs
#    add_header X-Frame-Options DENY;
#    add_header X-Frame-Options "http://{{ sp_fqdn }}/";
#    add_header Access-Control-Allow-Origin *;

    # FastCGI responder for SSO
    location /Shibboleth.sso {
        include fastcgi_params;
        #fastcgi_pass 127.0.0.1:9003;
        fastcgi_pass unix:/var/run/shibboleth/shibresponder.sock;
    }

    #FastCGI authorizer for Auth Request module
    location = /shibauthorizer {
        internal;
        include fastcgi_params;
        #fastcgi_pass 127.0.0.1:9002;
        fastcgi_pass unix:/var/run/shibboleth/shibauthorizer.sock;
    }

    #Resources for the Shibboleth error pages.
    # location /shibboleth-sp {
        # alias /usr/share/shibboleth/;
    # }

    # php approach for general purpose
    # location ~ \.php$ {
        # try_files $uri =404;
        # fastcgi_pass unix:/var/run/php/php7.3-fpm.sock ;
        # fastcgi_index index.php;
        # fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        # include fastcgi_params;
    # }

    location /secure/images {
        alias /var/www/html/sp.testunical.it/secure/images/; # your Django project's static files - amend as required
        autoindex on;
    }

    # A secured location with a php example
    # it could handle requests for /secure/ninja.html
    location ^~ /secure {
         # index index.php index.html index.htm;
         # try_files $uri $uri/ /index.php?$args;

         include shib_fastcgi_params;
         include shib_clear_headers;
         more_clear_input_headers 'displayName' 'mail' 'persistent-id';
         shib_request /shibauthorizer;

         # Add HTTP_SHIB_ prefix to variables
         shib_request_use_headers on;

         fastcgi_pass unix:/var/run/php/php7.3-fpm.sock;
         fastcgi_index index.php;

         #fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
         fastcgi_param  SCRIPT_FILENAME $request_filename;
    	 include fastcgi_params;
     }

    # example for custom error templates
    # error_page   500 502 503 504  /50x.html;
    # location = /50x.html {
        # root   /usr/local/nginx/html;
    # }

    ## Deny illegal Host headers
    if ($host !~* ^({{ sp_fqdn }})$ ) {
        return 444;
    }

}
